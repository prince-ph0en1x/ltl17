*** This is NuSMV 2.6.0 (compiled on Wed Oct 14 15:36:56 2015)
*** Enabled addons are: compass
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Please report bugs to <Please report bugs to <nusmv-users@fbk.eu>>

*** Copyright (c) 2010-2014, Fondazione Bruno Kessler

*** This version of NuSMV is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of NuSMV is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

-- specification !(!FALSE U !(!(output = oZ) | ((!((output = oW & !(input = iC)) &  X (!(input = iC) U (output = oS & !(input = iC)))) U (input = iC | output = oU)) | !(!FALSE U !(!(output = oW &  X (TRUE U output = oS)))))))  is true
-- specification !(!FALSE U !(input = iB & (!(!(input = iF)) | !(!(input = iF) U !((!(input = iC) | (!(input = iF) U (output = oX & !(input = iF)))) | input = iF)))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    state = s0
    input = iG
    output = null
  -> State: 1.2 <-
    state = s1
    input = null
    output = oP
  -- Loop starts here
  -> State: 1.3 <-
    input = iH
    output = null
  -> State: 1.4 <-
    input = null
    output = oS
  -> State: 1.5 <-
    input = iH
    output = null
-- specification (!(TRUE U output = oX) | (!(output = oS) U (output = oZ | output = oX)))  is true
-- specification !(!FALSE U !(!(input = iF & (TRUE U input = iA)) | (!(output = oO) U (input = iA | ((output = oU & !(output = oO)) &  X (!(output = oO) U input = iB))))))  is true
-- specification !(!FALSE U !(!(input = iG) | !(!FALSE U !(!(input = iH) | (output = oT &  X (TRUE U output = oQ))))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 2.1 <-
    state = s0
    input = iG
    output = null
  -> State: 2.2 <-
    state = s1
    input = null
    output = oP
  -> State: 2.3 <-
    input = iH
    output = null
  -- Loop starts here
  -> State: 2.4 <-
    input = null
    output = oS
  -> State: 2.5 <-
    input = iH
    output = null
  -> State: 2.6 <-
    input = null
    output = oS
-- specification !(!FALSE U !(!(output = oV) | ((!((output = oX & !(output = oO)) &  X (!(output = oO) U (output = oT & !(output = oO)))) U (output = oO | input = iG)) | !(!FALSE U !(!(output = oX &  X (TRUE U output = oT)))))))  is true
-- specification !(!FALSE U !(!(input = iI) | (TRUE U (output = oP &  X (TRUE U output = oQ)))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 3.1 <-
    state = s0
    input = iI
    output = null
  -> State: 3.2 <-
    state = s1
    input = null
    output = oO
  -- Loop starts here
  -> State: 3.3 <-
    input = iH
    output = null
  -> State: 3.4 <-
    input = null
    output = oS
  -> State: 3.5 <-
    input = iH
    output = null
-- specification !(!FALSE U !(!(output = oZ & (TRUE U input = iG)) | (!((output = oU & !(input = iG)) &  X (!(input = iG) U (output = oX & !(input = iG)))) U (input = iG | input = iF))))  is true
-- specification !(!FALSE U !(!(input = iH) | (TRUE U (output = oV &  X (TRUE U output = oY)))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 4.1 <-
    state = s0
    input = iG
    output = null
  -> State: 4.2 <-
    state = s1
    input = null
    output = oP
  -> State: 4.3 <-
    input = iH
    output = null
  -- Loop starts here
  -> State: 4.4 <-
    input = null
    output = oS
  -> State: 4.5 <-
    input = iH
    output = null
  -> State: 4.6 <-
    input = null
    output = oS
-- specification (!(!FALSE U !(!(input = iE))) | (TRUE U (input = iE & !(!(output = oT) U !(!(output = oZ) | output = oT)))))  is true
-- specification (!(TRUE U output = oQ) | (!(output = oQ) U ((output = oU & !(output = oQ)) &  X (!(output = oQ) U input = iA))))  is true
-- specification !(!FALSE U !(!(output = oR) | !(!FALSE U !(!(input = iE) | (output = oO &  X (TRUE U output = oV))))))  is true
-- specification !(!FALSE U !(!(output = oZ & (TRUE U input = iI)) | ((input = iH & (!( X (!(input = iI) U input = iD)) |  X (!(input = iI) U (input = iD & (TRUE U output = oW))))) U input = iI)))  is true
-- specification !(!FALSE U !(!(input = iE) | (TRUE U ((output = oS & !(output = oX)) &  X (!(output = oX) U output = oT)))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 5.1 <-
    state = s0
    input = iE
    output = null
  -> State: 5.2 <-
    state = s1
    input = null
    output = oW
  -- Loop starts here
  -> State: 5.3 <-
    input = iH
    output = null
  -> State: 5.4 <-
    input = null
    output = oS
  -> State: 5.5 <-
    input = iH
    output = null
-- specification (!(TRUE U output = oQ) | ((!(input = iJ) | (!(output = oQ) U (((output = oS & !(output = oQ)) & !(output = oP)) &  X ((!(output = oQ) & !(output = oP)) U output = oZ)))) U output = oQ))  is true
-- specification (!(TRUE U (output = oT &  X (TRUE U output = oY))) | (!(output = oT) U output = oW))  is true
-- specification (!(TRUE U input = iA) | (!(output = oW) U (input = iA | ((input = iH & !(output = oW)) &  X (!(output = oW) U input = iI)))))  is true
-- specification !(!FALSE U !(!(input = iF) | ((!(input = iC) | (!(output = oO) U (((output = oY & !(output = oO)) & !(output = oR)) &  X ((!(output = oO) & !(output = oR)) U output = oT)))) U (output = oO | !(!FALSE U !(!(input = iC) | ((output = oY & !(output = oR)) &  X (!(output = oR) U output = oT))))))))  is true
-- specification (!(!FALSE U !(!(input = iD))) | (TRUE U (input = iD & !(!(output = oR) U !(!(output = oP) | output = oR)))))  is true
-- specification (!(TRUE U (output = oU &  X (TRUE U output = oY))) | (!(output = oU) U input = iE))  is true
-- specification !(!FALSE U !(!(input = iH) | ((!(input = iC) | (!(output = oO) U (((output = oX & !(output = oO)) & !(output = oP)) &  X ((!(output = oO) & !(output = oP)) U output = oY)))) U (output = oO | !(!FALSE U !(!(input = iC) | ((output = oX & !(output = oP)) &  X (!(output = oP) U output = oY))))))))  is true
-- specification !(!FALSE U !(!(output = oT & (TRUE U input = iB)) | ((input = iE & (!( X (!(input = iB) U input = iG)) |  X (!(input = iB) U (input = iG & (TRUE U output = oO))))) U input = iB)))  is true
-- specification (!(!FALSE U !(!(output = oZ))) | (TRUE U (output = oZ & !(!(output = oO) U !(!(output = oV) | output = oO)))))  is true
-- specification !(!FALSE U !(!(output = oS) | !(!FALSE U !(input = iJ & (!( X (TRUE U input = iI)) |  X (!(input = iI) U (input = iI & (TRUE U output = oZ))))))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 6.1 <-
    state = s0
    input = iG
    output = null
  -> State: 6.2 <-
    state = s1
    input = null
    output = oP
  -- Loop starts here
  -> State: 6.3 <-
    input = iH
    output = null
  -> State: 6.4 <-
    input = null
    output = oS
  -- Loop starts here
  -> State: 6.5 <-
    input = iH
    output = null
  -> State: 6.6 <-
    input = null
    output = oS
  -> State: 6.7 <-
    input = iH
    output = null
-- specification !(!FALSE U !(!(output = oO & (TRUE U output = oT)) | (!((output = oS & !(output = oT)) &  X (!(output = oT) U (output = oW & !(output = oT)))) U (output = oT | output = oV))))  is true
-- specification (!(TRUE U input = iF) | ((input = iG & (!( X (!(input = iF) U input = iB)) |  X (!(input = iF) U (input = iB & (TRUE U output = oV))))) U input = iF))  is true
-- specification (!(TRUE U output = oR) | (!(output = oR) U ((input = iJ & !(output = oR)) &  X (!(output = oR) U input = iD))))  is true
-- specification (!(TRUE U input = iA) | (!(output = oW) U (input = iC | input = iA)))  is true
-- specification !(!FALSE U !(!(input = iJ & (TRUE U input = iE)) | (!(output = oO) U (input = iE | ((output = oP & !(output = oO)) &  X (!(output = oO) U output = oZ))))))  is true
-- specification !(!FALSE U !(!((input = iI & !(output = oP)) & (TRUE U output = oP)) | ((!(input = iE) | (!(output = oP) U (output = oS & !(output = oP)))) U output = oP)))  is true
-- specification (!(TRUE U output = oQ) | ((!(input = iD) | (!(output = oQ) U (output = oP & !(output = oQ)))) U output = oQ))  is true
-- specification (!(TRUE U output = oV) | (!((output = oO & !(output = oV)) &  X (!(output = oV) U (output = oZ & !(output = oV)))) U (output = oV | input = iB)))  is true
-- specification !(!FALSE U !(!(input = iH) | (TRUE U (output = oV &  X (TRUE U output = oU)))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 7.1 <-
    state = s0
    input = iG
    output = null
  -> State: 7.2 <-
    state = s1
    input = null
    output = oP
  -> State: 7.3 <-
    input = iH
    output = null
  -- Loop starts here
  -> State: 7.4 <-
    input = null
    output = oS
  -> State: 7.5 <-
    input = iH
    output = null
  -> State: 7.6 <-
    input = null
    output = oS
-- specification (!(TRUE U output = oO) | ((!(input = iC) | (!(output = oO) U (output = oU & !(output = oO)))) U output = oO))  is true
-- specification (!(!FALSE U !(!(output = oT))) | (!(output = oT) U (output = oT & (!(TRUE U output = oS) | (!(output = oS) U ((input = iB & !(output = oS)) &  X (!(output = oS) U output = oQ)))))))  is true
-- specification !(!FALSE U !(!(input = iI) | (TRUE U output = oW)))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 8.1 <-
    state = s0
    input = iI
    output = null
  -> State: 8.2 <-
    state = s1
    input = null
    output = oO
  -- Loop starts here
  -> State: 8.3 <-
    input = iH
    output = null
  -> State: 8.4 <-
    input = null
    output = oS
  -> State: 8.5 <-
    input = iH
    output = null
-- specification !(!FALSE U !(!(input = iJ & (TRUE U input = iH)) | (!((output = oQ & !(input = iH)) &  X (!(input = iH) U (output = oV & !(input = iH)))) U (input = iH | input = iD))))  is true
-- specification !(!FALSE U !(!(input = iA) | !(!FALSE U !(input = iB & (!( X (TRUE U input = iF)) |  X (!(input = iF) U (input = iF & (TRUE U output = oQ))))))))  is true
-- specification !(!FALSE U !(!(input = iI) | (TRUE U (output = oQ &  X (TRUE U output = oV)))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 9.1 <-
    state = s0
    input = iI
    output = null
  -> State: 9.2 <-
    state = s1
    input = null
    output = oO
  -- Loop starts here
  -> State: 9.3 <-
    input = iH
    output = null
  -> State: 9.4 <-
    input = null
    output = oS
  -> State: 9.5 <-
    input = iH
    output = null
-- specification !(!FALSE U !(!(input = iG) | !(!FALSE U !(!(input = iJ) | (TRUE U output = oR)))))  is true
-- specification (!(!FALSE U !(!(output = oS))) | (!(output = oS) U (output = oS & (!(TRUE U output = oP) | (!(output = oP) U ((output = oO & !(output = oP)) &  X (!(output = oP) U input = iI)))))))  is true
-- specification (!(!FALSE U !(!(input = iD))) | (TRUE U (input = iD & !(!(output = oU) U !(!(output = oS) | output = oU)))))  is true
-- specification !(!FALSE U !(!(input = iD) | (TRUE U (output = oW &  X (TRUE U output = oP)))))  is true
-- specification !(!FALSE U !(!(input = iC) | ((!(input = iI) | (!(output = oU) U ((output = oQ & !(output = oU)) &  X (!(output = oU) U output = oO)))) U (output = oU | !(!FALSE U !(!(input = iI) | (output = oQ &  X (TRUE U output = oO))))))))  is true
-- specification !(!FALSE U !(output = oU & (!(!(output = oW)) | !(!(output = oO | output = oW) U !(!(output = oZ) | (output = oO | output = oW))))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 10.1 <-
    state = s0
    input = iG
    output = null
  -> State: 10.2 <-
    state = s1
    input = null
    output = oP
  -- Loop starts here
  -> State: 10.3 <-
    input = iH
    output = null
  -> State: 10.4 <-
    input = null
    output = oS
  -> State: 10.5 <-
    input = iH
    output = null
-- specification !(!FALSE U !(!(input = iJ) | (TRUE U (output = oX &  X (TRUE U output = oQ)))))  is true
-- specification !(!FALSE U !(!(output = oV) | !(!FALSE U !(!(input = iC) | ((output = oS & !(output = oT)) &  X (!(output = oT) U output = oZ))))))  is true
-- specification (!(TRUE U output = oR) | ((!(input = iF) | (!(output = oR) U (((output = oU & !(output = oR)) & !(output = oW)) &  X ((!(output = oR) & !(output = oW)) U output = oS)))) U output = oR))  is true
-- specification !(!FALSE U !(!(input = iA & (TRUE U output = oW)) | (!(output = oO) U (output = oW | ((output = oZ & !(output = oO)) &  X (!(output = oO) U input = iE))))))  is true
-- specification !(!FALSE U !(!(input = iH) | ((!(input = iE) | (!(output = oX) U ((output = oU & !(output = oX)) &  X (!(output = oX) U output = oV)))) U (output = oX | !(!FALSE U !(!(input = iE) | (output = oU &  X (TRUE U output = oV))))))))  is true
-- specification !(!FALSE U !(!(output = oS) | ((!(input = iJ) | (!(output = oZ) U (((output = oX & !(output = oZ)) & !(output = oR)) &  X ((!(output = oZ) & !(output = oR)) U output = oU)))) U (output = oZ | !(!FALSE U !(!(input = iJ) | ((output = oX & !(output = oR)) &  X (!(output = oR) U output = oU))))))))  is true
-- specification !(!FALSE U !(!(input = iA & (TRUE U output = oW)) | ((input = iH & (!( X (!(output = oW) U input = iI)) |  X (!(output = oW) U (input = iI & (TRUE U output = oS))))) U output = oW)))  is true
-- specification (!(TRUE U output = oT) | (!(output = oZ) U (output = oP | output = oT)))  is true
-- specification (!(TRUE U output = oS) | (!(output = oV) U (output = oS | ((output = oO & !(output = oV)) &  X (!(output = oV) U input = iG)))))  is true
-- specification !(!FALSE U !(!(output = oQ) | (!(TRUE U output = oY) | (!(output = oY) U (output = oX | ((output = oZ & !(output = oY)) &  X (!(output = oY) U input = iB)))))))  is true
-- specification !(!FALSE U !(output = oU & (!(!(input = iD)) | !(!(input = iD) U !((!(input = iC) | (!(input = iD) U (output = oT & !(input = iD)))) | input = iD)))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 11.1 <-
    state = s0
    input = iG
    output = null
  -> State: 11.2 <-
    state = s1
    input = null
    output = oP
  -- Loop starts here
  -> State: 11.3 <-
    input = iH
    output = null
  -> State: 11.4 <-
    input = null
    output = oS
  -> State: 11.5 <-
    input = iH
    output = null
-- specification (!(TRUE U input = iJ) | (!(output = oZ) U (input = iJ | ((output = oW & !(output = oZ)) &  X (!(output = oZ) U input = iI)))))  is true
-- specification (!(TRUE U output = oO) | (!(output = oX) U (input = iE | output = oO)))  is true
-- specification !(!FALSE U !(!(input = iA) | (TRUE U (output = oX &  X (TRUE U output = oQ)))))  is true
-- specification !(!(output = oX) U !(!(output = oS) | output = oX))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 12.1 <-
    state = s0
    input = iG
    output = null
  -> State: 12.2 <-
    state = s1
    input = null
    output = oP
  -- Loop starts here
  -> State: 12.3 <-
    input = iH
    output = null
  -> State: 12.4 <-
    input = null
    output = oS
  -- Loop starts here
  -> State: 12.5 <-
    input = iH
    output = null
  -> State: 12.6 <-
    input = null
    output = oS
  -> State: 12.7 <-
    input = iH
    output = null
-- specification !(!FALSE U !(!(input = iF) | (TRUE U (output = oQ &  X (TRUE U output = oP)))))  is true
-- specification (!(!FALSE U !(!(output = oW))) | (!(output = oW) U (output = oW & (!(TRUE U (output = oZ &  X (TRUE U output = oX))) | (!(output = oZ) U input = iI)))))  is true
-- specification !(!FALSE U !(!(input = iJ) | (!(TRUE U output = oT) | (!(output = oT) U (output = oR | ((input = iE & !(output = oT)) &  X (!(output = oT) U input = iF)))))))  is true
-- specification !(!FALSE U !(!((input = iI & !(input = iD)) & (TRUE U input = iD)) | (!(output = oR) U (input = iF | input = iD))))  is true
-- specification !(!FALSE U !(!((output = oU & !(output = oO)) & (TRUE U output = oO)) | (!(output = oS) U (output = oY | output = oO))))  is true
-- specification !(!FALSE U !(!(output = oR & (TRUE U output = oQ)) | (!(output = oW) U (output = oQ | ((output = oX & !(output = oW)) &  X (!(output = oW) U input = iE))))))  is true
-- specification (!(TRUE U output = oU) | (!((output = oX & !(output = oU)) &  X (!(output = oU) U (output = oW & !(output = oU)))) U (output = oU | input = iE)))  is true
-- specification !(!FALSE U !(!(input = iC & (TRUE U input = iA)) | (!(output = oV) U (input = iA | ((output = oP & !(output = oV)) &  X (!(output = oV) U output = oX))))))  is true
-- specification !(!FALSE U !(output = oY & (!(!(output = oR)) | !(!(input = iD | output = oR) U !(!(output = oU) | (input = iD | output = oR))))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 13.1 <-
    state = s0
    input = iG
    output = null
  -> State: 13.2 <-
    state = s1
    input = null
    output = oP
  -- Loop starts here
  -> State: 13.3 <-
    input = iH
    output = null
  -> State: 13.4 <-
    input = null
    output = oS
  -> State: 13.5 <-
    input = iH
    output = null
-- specification (!(TRUE U input = iH) | (!((output = oO & !(input = iH)) &  X (!(input = iH) U (output = oR & !(input = iH)))) U (input = iH | output = oW)))  is true
-- specification !(!FALSE U !(!(input = iD & (TRUE U output = oY)) | ((input = iE & (!( X (!(output = oY) U input = iI)) |  X (!(output = oY) U (input = iI & (TRUE U output = oP))))) U output = oY)))  is true
-- specification (!(!FALSE U !(!(input = iI))) | (!(input = iI) U (input = iI & (!(TRUE U output = oW) | (!(output = oW) U ((output = oU & !(output = oW)) &  X (!(output = oW) U output = oY)))))))  is true
-- specification !(!(input = iC) U !(!(output = oQ) | input = iC))  is true
-- specification (!(!FALSE U !(!(input = iE))) | (!(input = iE) U (input = iE & (!(TRUE U (output = oV &  X (TRUE U output = oQ))) | (!(output = oV) U output = oW)))))  is true
-- specification !(!FALSE U !(!(output = oP & (TRUE U output = oZ)) | ((input = iA & (!( X (!(output = oZ) U input = iJ)) |  X (!(output = oZ) U (input = iJ & (TRUE U output = oV))))) U output = oZ)))  is true
-- specification !(!FALSE U !(!(output = oS) | (!(TRUE U output = oT) | (!(output = oT) U (output = oV | ((input = iC & !(output = oT)) &  X (!(output = oT) U output = oQ)))))))  is true
-- specification (!(TRUE U input = iC) | ((!(input = iJ) | (!(input = iC) U ((output = oP & !(input = iC)) &  X (!(input = iC) U output = oO)))) U input = iC))  is true
-- specification (!(TRUE U input = iD) | (!(output = oT) U (input = iD | ((output = oW & !(output = oT)) &  X (!(output = oT) U input = iH)))))  is true
-- specification !(!FALSE U !(!(input = iG) | !(!FALSE U !(!(input = iJ) | (TRUE U output = oW)))))  is true
-- specification (!(!FALSE U !(!(output = oZ))) | (!(output = oZ) U (output = oZ & (!(TRUE U (output = oX &  X (TRUE U output = oQ))) | (!(output = oX) U input = iD)))))  is true
-- specification !(!FALSE U !(!((output = oQ & !(input = iB)) & (TRUE U input = iB)) | (!(output = oW) U (output = oO | input = iB))))  is true
-- specification (!(!FALSE U !(!(input = iJ))) | (TRUE U (input = iJ & !(!(input = iC) U !(!(output = oR) | input = iC)))))  is true
-- specification !(!FALSE U !(!((output = oX & !(output = oP)) & (TRUE U output = oP)) | ((!(input = iC) | (!(output = oP) U (output = oS & !(output = oP)))) U output = oP)))  is true
-- specification !(!FALSE U !(!(output = oP & (TRUE U output = oS)) | (!((output = oZ & !(output = oS)) &  X (!(output = oS) U (output = oR & !(output = oS)))) U (output = oS | output = oO))))  is true
-- specification (!(!FALSE U !(!(input = iH))) | (!(input = iH) U (input = iH & (!(TRUE U (output = oS &  X (TRUE U output = oX))) | (!(output = oS) U output = oV)))))  is true
-- specification !(!FALSE U !(!(input = iD) | (!(TRUE U output = oQ) | (!(output = oQ) U (input = iB | ((input = iC & !(output = oQ)) &  X (!(output = oQ) U output = oY)))))))  is true
-- specification (!(TRUE U output = oO) | ((!(input = iD) | (!(output = oO) U (((output = oV & !(output = oO)) & !(output = oT)) &  X ((!(output = oO) & !(output = oT)) U output = oS)))) U output = oO))  is true
-- specification !(!FALSE U !(output = oP & (!(!(output = oW)) | !(!(output = oW) U !((!(input = iI) | (!(output = oW) U (output = oY & !(output = oW)))) | output = oW)))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 14.1 <-
    state = s0
    input = iG
    output = null
  -> State: 14.2 <-
    state = s1
    input = null
    output = oP
  -> State: 14.3 <-
    input = iH
    output = null
  -- Loop starts here
  -> State: 14.4 <-
    input = null
    output = oS
  -> State: 14.5 <-
    input = iH
    output = null
  -> State: 14.6 <-
    input = null
    output = oS
-- specification (!(TRUE U input = iH) | ((!(input = iE) | (!(input = iH) U (output = oS & !(input = iH)))) U input = iH))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 15.1 <-
    state = s0
    input = iE
    output = null
  -> State: 15.2 <-
    state = s1
    input = null
    output = oW
  -> State: 15.3 <-
    input = iH
    output = null
  -- Loop starts here
  -> State: 15.4 <-
    input = null
    output = oS
  -> State: 15.5 <-
    input = iH
    output = null
  -> State: 15.6 <-
    input = null
    output = oS
-- specification !(!FALSE U !(!(input = iJ) | (!(TRUE U output = oP) | (!(output = oP) U (output = oV | ((output = oW & !(output = oP)) &  X (!(output = oP) U output = oY)))))))  is true
-- specification (!(!FALSE U !(!(input = iH))) | (!(input = iH) U (input = iH & (!(TRUE U output = oX) | (!(output = oX) U ((input = iA & !(output = oX)) &  X (!(output = oX) U input = iJ)))))))  is true
-- specification !(!FALSE U !(!(output = oX & (TRUE U output = oU)) | (!(output = oV) U (output = oU | ((input = iC & !(output = oV)) &  X (!(output = oV) U output = oS))))))  is true
-- specification !(!FALSE U !(!((input = iA & !(output = oP)) & (TRUE U output = oP)) | ((!(input = iJ) | (!(output = oP) U (output = oU & !(output = oP)))) U output = oP)))  is true
-- specification !(!FALSE U !(!(input = iE) | (TRUE U output = oS)))  is true
-- specification !(!FALSE U !(!(input = iD) | ((!(input = iE) | (!(output = oY) U ((output = oV & !(output = oY)) &  X (!(output = oY) U output = oT)))) U (output = oY | !(!FALSE U !(!(input = iE) | (output = oV &  X (TRUE U output = oT))))))))  is true
-- specification (!(TRUE U output = oP) | ((input = iE & (!( X (!(output = oP) U input = iH)) |  X (!(output = oP) U (input = iH & (TRUE U output = oU))))) U output = oP))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 16.1 <-
    state = s0
    input = iG
    output = null
  -> State: 16.2 <-
    state = s1
    input = null
    output = oP
  -- Loop starts here
  -> State: 16.3 <-
    input = iH
    output = null
  -> State: 16.4 <-
    input = null
    output = oS
  -> State: 16.5 <-
    input = iH
    output = null
-- specification !(!FALSE U !(!(input = iH) | (TRUE U (output = oT &  X (TRUE U output = oS)))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 17.1 <-
    state = s0
    input = iG
    output = null
  -> State: 17.2 <-
    state = s1
    input = null
    output = oP
  -> State: 17.3 <-
    input = iH
    output = null
  -- Loop starts here
  -> State: 17.4 <-
    input = null
    output = oS
  -> State: 17.5 <-
    input = iH
    output = null
  -> State: 17.6 <-
    input = null
    output = oS
-- specification (!(!FALSE U !(!(input = iE))) | (!(input = iE) U (input = iE & (!(TRUE U (output = oR &  X (TRUE U output = oO))) | (!(output = oR) U output = oP)))))  is true
-- specification (!(!FALSE U !(!(output = oV))) | (!(output = oV) U (output = oV & (!(TRUE U (output = oW &  X (TRUE U output = oR))) | (!(output = oW) U input = iA)))))  is true
-- specification !(!FALSE U !(!((input = iB & !(output = oQ)) & (TRUE U output = oQ)) | (!(output = oS) U (output = oZ | output = oQ))))  is true
